<Type Name="Users" FullName="CoreTweet.Core.Users">
  <TypeSignature Language="C#" Value="public class Users : CoreTweet.Core._Tokens" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Users extends CoreTweet.Core._Tokens" />
  <AssemblyInfo>
    <AssemblyName>CoreTweet</AssemblyName>
    <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreTweet.Core._Tokens</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>GET/POST users</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contributees">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; Contributees (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; Contributees(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns a collection of users that the specified user can "contribute" to.</para>
          <para>Note: A user_id or screen_name is required.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long user_id (optional)" /> : The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
          <para>
            <paramref name="string screen_name (optional)" /> : The screen name of the user for whom to return results for.</para>
          <para>
            <paramref name="bool include_entities (optional)" /> : The entities node will be disincluded when set to false.</para>
          <para>
            <paramref name="bool skip_status (optional)" /> : When set to either true, t or 1 statuses will not be included in the returned user objects.</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contributors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; Contributors (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; Contributors(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns a collection of users who can contribute to the specified account.</para>
          <para>Note: A user_id or screen_name is required.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long user_id (optional)" /> : The ID of the user for whom to return results for.</para>
          <para>
            <paramref name="string screen_name (optional)" /> : The screen name of the user for whom to return results for.</para>
          <para>
            <paramref name="bool include_entities (optional)" /> : The entities node will be disincluded when set to false.</para>
          <para>
            <paramref name="bool skip_status (optional)" /> : When set to either true, t or 1 statuses will not be included in the returned user objects.</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; Lookup (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; Lookup(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns fully-hydrated user objects for up to 100 users per request, as specified by comma-separated values passed to the user_id and/or screen_name parameters.</para>
          <para>This method is especially useful when used in conjunction with collections of user IDs returned from GET friends/ids and GET followers/ids.</para>
          <para>GET users/show is used to retrieve a single user object.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string user_id (optional)" /> : A comma separated list of user IDs, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger requests.</para>
          <para>
            <paramref name="string screen_name (optional)" /> : A comma separated list of screen names, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger (up to 100 screen names) requests.</para>
          <para>
            <paramref name="bool include_entities (optional)" /> : The entities node that may appear within embedded statuses will be disincluded when set to false.</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileBanner">
      <MemberSignature Language="C#" Value="public CoreTweet.Size ProfileBanner (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.Size ProfileBanner(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns the size of the specified user's profile banner. If the user has not uploaded a profile banner, a HTTP 404 will be served instead. This method can be used instead of string manipulation on the profile_banner_url returned in user objects as described in User Profile Images and Banners.</para>
          <para>Note: Always specify either an user_id or screen_name when requesting this method.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long id (optional)" /> : The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
          <para>
            <paramref name="string screen_name (optional)" /> : The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</para>
        </summary>
        <returns>The size.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportSpam">
      <MemberSignature Language="C#" Value="public CoreTweet.User ReportSpam (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.User ReportSpam(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.User</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Report the specified user as a spam account to Twitter. Additionally performs the equivalent of POST blocks/create on behalf of the authenticated user.</para>
          <para>Note: One of these parameters must be provided.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string screen_name (optional)" /> : The ID or screen_name of the user you want to report as a spammer. Helpful for disambiguating when a valid screen name is also a user ID.</para>
          <para>
            <paramref name="long user_id (optional)" /> : The ID of the user you want to report as a spammer. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
        </summary>
        <returns>The User.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; Search (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; Search(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Provides a simple, relevance-based search interface to public user accounts on Twitter. Try querying by topical interest, full name, company name, location, or other criteria. Exact match searches are not supported.</para>
          <para>Only the first 1,000 matching results are available.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string q (required)" /> : The search query to run against people search.</para>
          <para>
            <paramref name="int page (optional)" /> : Specifies the page of results to retrieve.</para>
          <para>
            <paramref name="int count (optional)" /> : The number of potential user results to retrieve per page. This value has a maximum of 20.</para>
          <para>
            <paramref name="bool include_entities (optional)" /> : The entities node will be disincluded from embedded tweet objects when set to false.</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public CoreTweet.User Show (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.User Show(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.User</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns a variety of information about the user specified by the required user_id or screen_name parameter. The author's most recent Tweet will be returned inline when possible.</para>
          <para>GET users/lookup is used to retrieve a bulk collection of user objects.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long user_id (required)" /> : The ID of the user for whom to return results for. Either an id or screen_name is required for this method.</para>
          <para>
            <paramref name="string screen_name (required)" /> : The screen name of the user for whom to return results for. Either a id or screen_name is required for this method.</para>
          <para>
            <paramref name="bool include_entities (optional)" /> : The entities node will be disincluded when set to false.</para>
        </summary>
        <returns>The user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuggestedMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; SuggestedMembers (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; SuggestedMembers(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string slug (required)" /> : The short name of list or a category</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suggestions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.Category&gt; Suggestions (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Category&gt; Suggestions(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Category&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Access to Twitter's suggested user list. This returns the list of suggested user categories. The category can be used in GET users/suggestions/:slug to get the users in that category.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string lang (optional)" /> : Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the GET help/languages API request. Unsupported language codes will receive English (en) results. If you use lang in this request, ensure you also include it when requesting the GET users/suggestions/:slug list.</para>
        </summary>
        <returns>Catgories.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
