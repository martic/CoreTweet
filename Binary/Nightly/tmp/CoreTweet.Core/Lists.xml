<Type Name="Lists" FullName="CoreTweet.Core.Lists">
  <TypeSignature Language="C#" Value="public class Lists : CoreTweet.Core._Tokens" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Lists extends CoreTweet.Core._Tokens" />
  <AssemblyInfo>
    <AssemblyName>CoreTweet</AssemblyName>
    <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreTweet.Core._Tokens</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>GET/POST lists</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public CoreTweet.List Create (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.List Create(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Creates a new list for the authenticated user. Note that you can't create more than 20 lists per account.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string name (required)" /> : The name for the list.A list's name must start with a letter and can consist only of 25 or fewer letters, numbers, "-", or "_" characters.</para>
          <para>
            <paramref name="string mode (optional)" /> : Whether your list is public or private. Values can be public or private. If no mode is specified the list will be public.</para>
          <para>
            <paramref name="string description (optional)" /> : The description to give the list.</para>
        </summary>
        <returns>The list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public CoreTweet.List Destroy (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.List Destroy(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Deletes the specified list. The authenticated user must own the list to be able to destroy it.</para>
          <para>Note: Either a list_id or a slug is required. If providing a list_slug, an owner_screen_name or owner_id is also required.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string owner_screen_name (optional)" /> : The screen name of the user who owns the list being requested by a slug.</para>
        </summary>
        <returns>The destroied list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.List&gt; List (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.List&gt; List(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.List&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns all lists the authenticating or specified user subscribes to, including their own. The user is specified using the user_id or screen_name parameters. If no user is given, the authenticating user is used.</para>
          <para>This method used to be GET lists in version 1.0 of the API and has been renamed for consistency with other call.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long user_id (optional)" /> : The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
          <para>
            <paramref name="string screen_name (optional)" /> : The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</para>
        </summary>
        <returns>Lists.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public CoreTweet.Cursored&lt;CoreTweet.User&gt; Members (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.Cursored`1&lt;class CoreTweet.User&gt; Members(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.Cursored&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.</para>
          <para>Note: Either a list_id or a slug is required. If providing a list_slug, an owner_screen_name or owner_id is also required.</para>
          <para>The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.</para>
          <see cref="!:https://dev.twitter.com/docs/misc/cursoring" />
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long list_id (required)" /> : The numerical id of the list.</para>
          <para>
            <paramref name="string slug (required)" /> : You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the owner_id or owner_screen_name parameters.</para>
          <para>
            <paramref name="string owner_sereen_name (optional)" /> : The screen name of the user who owns the list being requested by a slug.</para>
          <para>
            <paramref name="long owner_id (optional)" /> : The user ID of the user who owns the list being requested by a slug.</para>
          <para>
            <paramref name="long cursor (semi-optional)" /> : Causes the collection of list members to be broken into "pages" of somewhat consistent size. If no cursor is provided, a value of -1 will be assumed, which is the first "page".</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Memberships">
      <MemberSignature Language="C#" Value="public CoreTweet.Cursored&lt;CoreTweet.User&gt; Memberships (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.Cursored`1&lt;class CoreTweet.User&gt; Memberships(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.Cursored&lt;CoreTweet.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns the lists the specified user has been added to. If user_id or screen_name are not provided the memberships for the authenticating user are returned.</para>
          <see cref="!:https://dev.twitter.com/docs/misc/cursoring" />
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="string sereen_name (optional)" /> : The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</para>
          <para>
            <paramref name="long user_id (optional)" /> : The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
          <para>
            <paramref name="long cursor (semi-optional)" /> : Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list.</para>
          <para>
            <paramref name="bool filter_to_owned_lists (optional)" /> : When set to true, will return just lists the authenticating user owns, and the user represented by user_id or screen_name is a member of.</para>
        </summary>
        <returns>Users.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MembersShow">
      <MemberSignature Language="C#" Value="public CoreTweet.User MembersShow (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.User MembersShow(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.User</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Check if the specified user is a member of the specified list.</para>
          <para>Note: Either a list_id or a slug is required. If providing a list_slug, an owner_screen_name or owner_id is also required.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long list_id (required)" /> : The numerical id of the list.</para>
          <para>
            <paramref name="string slug (required)" /> : You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the owner_id or owner_screen_name parameters.</para>
          <para>
            <paramref name="string sereen_name (required)" /> : The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</para>
          <para>
            <paramref name="long user_id (required)" /> : The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
          <para>
            <paramref name="string owner_screen_name (optional)" /> : The screen name of the user who owns the list being requested by a slug.</para>
          <para>
            <paramref name="long owner_id (optional)" /> : The user ID of the user who owns the list being requested by a slug.</para>
        </summary>
        <returns>The user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public CoreTweet.List Show (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.List Show(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.</para>
          <para>Note: Either a list_id or a slug is required. If providing a list_slug, an owner_screen_name or owner_id is also required.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long list_id (required)" /> : The numerical id of the list.</para>
          <para>
            <paramref name="string slug (required)" /> : You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the owner_id or owner_screen_name parameters.</para>
          <para>
            <paramref name="string owner_screen_name (optional)" /> : The screen name of the user who owns the list being requested by a slug.</para>
          <para>
            <paramref name="long owner_id (optional)" /> : The user ID of the user who owns the list being requested by a slug.</para>
        </summary>
        <returns>A list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statuses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; Statuses (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; Statuses(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribersShow">
      <MemberSignature Language="C#" Value="public CoreTweet.User SubscribersShow (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.User SubscribersShow(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.User</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscriptions">
      <MemberSignature Language="C#" Value="public CoreTweet.Cursored&lt;CoreTweet.List&gt; Subscriptions (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.Cursored`1&lt;class CoreTweet.List&gt; Subscriptions(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.Cursored&lt;CoreTweet.List&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para>Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default. Does not include the user's own lists.</para>
          <para>Note: A user_id or screen_name must be provided.</para>
          <para>Avaliable parameters: </para>
          <para>
            <paramref name="long user_id (optional)" /> : The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</para>
          <para>
            <paramref name="string screen_name (optional)" /> : The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</para>
          <para>
            <paramref name="int count (optional)" /> : The amount of results to return per page. Defaults to 20. Maximum of 1,000 when using cursors.</para>
          <para>
            <paramref name="long cursor (optional)" /> : Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.</para>
        </summary>
        <returns>Lists.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public CoreTweet.List Update (System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreTweet.List Update(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt; parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreTweet.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters.
            </param>
        <summary>
          <para />
          <para>Avaliable parameters: </para>
        </summary>
        <returns>The list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
