<Type Name="CoreBase" FullName="CoreTweet.Core.CoreBase">
  <TypeSignature Language="C#" Value="public abstract class CoreBase : CoreTweet.Core._Tokens" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CoreBase extends CoreTweet.Core._Tokens" />
  <AssemblyInfo>
    <AssemblyName>CoreTweet</AssemblyName>
    <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreTweet.Core._Tokens</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CoreBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Convert&lt;T&gt; (dynamic e) where T : CoreTweet.Core.CoreBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Convert&lt;(class CoreTweet.Core.CoreBase) T&gt;(object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>CoreTweet.Core.CoreBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="e" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="e">To be added.</param>
        <summary>
            この子を呼べばTに対応するConvert()を呼んでdynamic objectをstatic objectに変換してくれます
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; ConvertArray&lt;T&gt; (dynamic e) where T : CoreTweet.Core.CoreBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; ConvertArray&lt;(class CoreTweet.Core.CoreBase) T&gt;(object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.4845.5780</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>CoreTweet.Core.CoreBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="e" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="e">To be added.</param>
        <summary>
            ( ,,Ծ ‸ Ծ ).｡ｏO( 説明いるのかな )
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
