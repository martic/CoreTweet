<Overview>
  <Assemblies>
    <Assembly Name="CoreTweet" Version="1.0.4822.3504">
      <Attributes>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("716 squad")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("(c) Canno, Karno 2013")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("The .NET Twitter Library supporting API 1.1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("CoreTweet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Codeplex.Data">
      <Type Name="DynamicJson" Kind="Class" />
    </Namespace>
    <Namespace Name="CoreTweet">
      <Type Name="BoundingBox" Kind="Class" />
      <Type Name="Category" Kind="Class" />
      <Type Name="Configurations" Kind="Class" />
      <Type Name="Contributors" Kind="Class" />
      <Type Name="Coordinates" Kind="Class" />
      <Type Name="Cursored`1" DisplayName="Cursored&lt;T&gt;" Kind="Class" />
      <Type Name="DirectMessage" Kind="Class" />
      <Type Name="Embed" Kind="Class" />
      <Type Name="Entity" Kind="Class" />
      <Type Name="Friendship" Kind="Class" />
      <Type Name="GeoResult" Kind="Class" />
      <Type Name="HashTag" Kind="Class" />
      <Type Name="Language" Kind="Class" />
      <Type Name="List" Kind="Class" />
      <Type Name="Media" Kind="Class" />
      <Type Name="MethodType" Kind="Enumeration" />
      <Type Name="OAuth" Kind="Class" />
      <Type Name="Place" Kind="Class" />
      <Type Name="Property" Kind="Class" />
      <Type Name="RelationShip" Kind="Class" />
      <Type Name="Request" Kind="Class" />
      <Type Name="Rest" Kind="Class" />
      <Type Name="Rest+Account" Kind="Class" />
      <Type Name="Rest+Blocks" Kind="Class" />
      <Type Name="Rest+DirectMessages" Kind="Class" />
      <Type Name="Rest+Favorites" Kind="Class" />
      <Type Name="Rest+Followers" Kind="Class" />
      <Type Name="Rest+Friends" Kind="Class" />
      <Type Name="Rest+Friendships" Kind="Class" />
      <Type Name="Rest+Geo" Kind="Class" />
      <Type Name="Rest+Help" Kind="Class" />
      <Type Name="Rest+Lists" Kind="Class" />
      <Type Name="Rest+Search" Kind="Class" />
      <Type Name="Rest+Statuses" Kind="Class" />
      <Type Name="Rest+Trends" Kind="Class" />
      <Type Name="Rest+Users" Kind="Class" />
      <Type Name="SavedSearches" Kind="Class" />
      <Type Name="SearchQuery" Kind="Class" />
      <Type Name="Setting" Kind="Class" />
      <Type Name="Size" Kind="Class" />
      <Type Name="Sizes" Kind="Class" />
      <Type Name="Status" Kind="Class" />
      <Type Name="Tokens" Kind="Class" />
      <Type Name="TrendsResult" Kind="Class" />
      <Type Name="Url" Kind="Class" />
      <Type Name="User" Kind="Class" />
      <Type Name="UserMention" Kind="Class" />
    </Namespace>
    <Namespace Name="CoreTweet.Core">
      <Type Name="CoreBase" Kind="Class" />
    </Namespace>
    <Namespace Name="CoreTweet.Ex">
      <Type Name="OthersExtension" Kind="Class" />
      <Type Name="SearchExtension" Kind="Class" />
      <Type Name="StatusExtension" Kind="Class" />
      <Type Name="UserExtension" Kind="Class" />
    </Namespace>
    <Namespace Name="CoreTweet.Ex.Develop">
      <Type Name="DevelopersExtention" Kind="Class" />
    </Namespace>
    <Namespace Name="TinyTweet">
      <Type Name="Api" Kind="Class" />
      <Type Name="MethodType" Kind="Enumeration" />
      <Type Name="OAuthClient" Kind="Class" />
      <Type Name="Property" Kind="Class" />
      <Type Name="Tokens" Kind="Class" />
    </Namespace>
  </Types>
  <Title>CoreTweet</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="ReplaceBadCharactor">
        <MemberSignature Language="C#" Value="public static string ReplaceBadCharactor (this string json);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReplaceBadCharactor(string json) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="json" Type="System.String" RefType="this" />
        </Parameters>
        <Docs>
          <param name="json">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="CoreTweet.Ex.Develop.DevelopersExtention" Member="M:CoreTweet.Ex.Develop.DevelopersExtention.ReplaceBadCharactor(System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ForEach&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e, Action&lt;T&gt; action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e, class System.Action`1&lt;!!T&gt; action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="action" Type="System.Action&lt;T&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="CoreTweet.Ex.OthersExtension" Member="M:CoreTweet.Ex.OthersExtension.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="Tweet">
        <MemberSignature Language="C#" Value="public static CoreTweet.Status Tweet (this string e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.Status Tweet(string e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.Status</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.String" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Tweet this text.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.OthersExtension" Member="M:CoreTweet.Ex.OthersExtension.Tweet(System.String,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.SearchQuery" />
      </Targets>
      <Member MemberName="SearchTweets">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; SearchTweets (this CoreTweet.SearchQuery e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; SearchTweets(class CoreTweet.SearchQuery e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.SearchQuery" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">To be added.</param>
          <param name="Parameters">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="CoreTweet.Ex.SearchExtension" Member="M:CoreTweet.Ex.SearchExtension.SearchTweets(CoreTweet.SearchQuery,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.SearchQuery" />
      </Targets>
      <Member MemberName="SearchUsers">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; SearchUsers (this CoreTweet.SearchQuery e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; SearchUsers(class CoreTweet.SearchQuery e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.SearchQuery" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">To be added.</param>
          <param name="Parameters">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="CoreTweet.Ex.SearchExtension" Member="M:CoreTweet.Ex.SearchExtension.SearchUsers(CoreTweet.SearchQuery,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.Status" />
      </Targets>
      <Member MemberName="Destroy">
        <MemberSignature Language="C#" Value="public static CoreTweet.Status Destroy (this CoreTweet.Status e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.Status Destroy(class CoreTweet.Status e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.Status</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.Status" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Destroy this tweet.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.Destroy(CoreTweet.Status,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="DestroyAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; DestroyAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; DestroyAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Destroy all of these tweets.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.DestroyAll(System.Collections.Generic.IEnumerable{CoreTweet.Status},CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.Status" />
      </Targets>
      <Member MemberName="Favorite">
        <MemberSignature Language="C#" Value="public static CoreTweet.Status Favorite (this CoreTweet.Status e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.Status Favorite(class CoreTweet.Status e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.Status</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.Status" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Favorite this tweet.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.Favorite(CoreTweet.Status,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="FavoriteAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; FavoriteAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; FavoriteAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Favorite all of these tweets.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.FavoriteAll(System.Collections.Generic.IEnumerable{CoreTweet.Status},CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ReplyToAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; ReplyToAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; e, CoreTweet.Tokens Tokens, Func&lt;CoreTweet.Status,string&gt; Text, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; ReplyToAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; e, class CoreTweet.Tokens Tokens, class System.Func`2&lt;class CoreTweet.Status, string&gt; Text, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Text" Type="System.Func&lt;CoreTweet.Status,System.String&gt;" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Text">To be added.</param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Reply to all of these tweets.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.ReplyToAll(System.Collections.Generic.IEnumerable{CoreTweet.Status},CoreTweet.Tokens,System.Func{CoreTweet.Status,System.String},System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.Status" />
      </Targets>
      <Member MemberName="ReplyToThis">
        <MemberSignature Language="C#" Value="public static CoreTweet.Status ReplyToThis (this CoreTweet.Status e, CoreTweet.Tokens Tokens, Func&lt;CoreTweet.Status,string&gt; Text, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.Status ReplyToThis(class CoreTweet.Status e, class CoreTweet.Tokens Tokens, class System.Func`2&lt;class CoreTweet.Status, string&gt; Text, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.Status</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.Status" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Text" Type="System.Func&lt;CoreTweet.Status,System.String&gt;" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Text">To be added.</param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Reply to this tweet.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.ReplyToThis(CoreTweet.Status,CoreTweet.Tokens,System.Func{CoreTweet.Status,System.String},System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.Status" />
      </Targets>
      <Member MemberName="Retweet">
        <MemberSignature Language="C#" Value="public static CoreTweet.Status Retweet (this CoreTweet.Status e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.Status Retweet(class CoreTweet.Status e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.Status</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.Status" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Retweet this tweet.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.Retweet(CoreTweet.Status,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="RetweetAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; RetweetAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; RetweetAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Retweet all of these tweets.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.RetweetAll(System.Collections.Generic.IEnumerable{CoreTweet.Status},CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.Status" />
      </Targets>
      <Member MemberName="Unfavorite">
        <MemberSignature Language="C#" Value="public static CoreTweet.Status Unfavorite (this CoreTweet.Status e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.Status Unfavorite(class CoreTweet.Status e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.Status</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.Status" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Un-favorite this tweet.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.Unfavorite(CoreTweet.Status,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="UnfavoriteAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; UnfavoriteAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt; e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; UnfavoriteAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.Status&gt; e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.Status&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Un-favorite all of these tweets.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.StatusExtension" Member="M:CoreTweet.Ex.StatusExtension.UnfavoriteAll(System.Collections.Generic.IEnumerable{CoreTweet.Status},CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.User" />
      </Targets>
      <Member MemberName="Follow">
        <MemberSignature Language="C#" Value="public static CoreTweet.User Follow (this CoreTweet.User e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.User Follow(class CoreTweet.User e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.User</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.User" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Follow this user.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.UserExtension" Member="M:CoreTweet.Ex.UserExtension.Follow(CoreTweet.User,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="FollowAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; FollowAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; FollowAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Follow all of these users.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.UserExtension" Member="M:CoreTweet.Ex.UserExtension.FollowAll(System.Collections.Generic.IEnumerable{CoreTweet.User},CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreTweet.User" />
      </Targets>
      <Member MemberName="Unfollow">
        <MemberSignature Language="C#" Value="public static CoreTweet.User Unfollow (this CoreTweet.User e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreTweet.User Unfollow(class CoreTweet.User e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>CoreTweet.User</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="CoreTweet.User" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Un-follow this user.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.UserExtension" Member="M:CoreTweet.Ex.UserExtension.Unfollow(CoreTweet.User,CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="UnfollowAll">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; UnfollowAll (this System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt; e, CoreTweet.Tokens Tokens, System.Linq.Expressions.Expression&lt;Func&lt;string,object&gt;&gt;[] Parameters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; UnfollowAll(class System.Collections.Generic.IEnumerable`1&lt;class CoreTweet.User&gt; e, class CoreTweet.Tokens Tokens, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, object&gt;&gt;[] Parameters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;CoreTweet.User&gt;" RefType="this" />
          <Parameter Name="Tokens" Type="CoreTweet.Tokens" />
          <Parameter Name="Parameters" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Object&gt;&gt;[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="Tokens">
            Tokens.
            </param>
          <param name="Parameters">
            Parameters.
            </param>
          <summary>
            Un-follow all of these users.
            </summary>
        </Docs>
        <Link Type="CoreTweet.Ex.UserExtension" Member="M:CoreTweet.Ex.UserExtension.UnfollowAll(System.Collections.Generic.IEnumerable{CoreTweet.User},CoreTweet.Tokens,System.Linq.Expressions.Expression{System.Func{System.String,System.Object}}[])" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
